{"version":3,"sources":["components/Header/index.js","services/api.js","components/TableResult/TableResultRows/index.js","components/TableResult/index.js","utils/find/index.js","utils/match/index.js","utils/result/index.js","utils/table/index.js","containers/Table/index.js","components/Results/ResultTeam/index.js","components/Results/Result/index.js","components/Results/index.js","components/TableObject/TableObjectRows/index.js","components/TableObject/index.js","containers/Team/index.js","utils/stats/index.js","components/WeekLinks/WeekLinksList/index.js","components/WeekLinks/WeekLinksSelect/index.js","components/WeekLinks/index.js","utils/parameter/index.js","containers/Weeks/index.js","containers/Main/index.js","index.js"],"names":["Header","className","to","role","aria-label","activeClassName","API_ENDPOINT","fetch","path","Promise","resolve","reject","superagent","end","err","res","ok","body","TableResultRows","table","map","result","index","imageUrl","teamId","url","position","key","src","alt","teamName","loading","points","won","drawn","lost","goals","goalsConceded","goalsDifference","TableResult","title","findByValue","teams","value","indexTeam","indexOf","getMatch","teamIds","score","nameTeam","nameOpponent","idTeam","idOpponent","scoreTeam","scoreOpponent","team","winner","getResult","opponent","matches","computeTable","weeksMatches","matchesPerTeam","teamsResult","model","matchIndex","match","push","getTeamsResult","tableResult","teamIndex","indexOpponent","getTableResult","sort","a","b","byPoints","byGoalsDifference","byGoalsScored","Table","useState","setTable","useEffect","requests","all","then","computedTable","length","ResultTeam","winnerClass","Result","props","resultTeam","Results","resultList","results","titles","TableObjectRows","rows","Object","entries","TableObject","Team","setTeam","stats","setStats","collapsed","setCollapse","params","response","newStats","id","idParsed","parseInt","forEach","matchResult","computeTeamStats","name","onClick","event","preventDefault","WeekLinksList","list","weeks","weekNumber","WeekLinksSelect","chosenWeek","handleChange","options","defaultValue","onChange","WeekLinks","week","selecOptions","setIndex","newIndex","isNaN","Weeks","history","useHistory","setResults","setChosenWeek","linksProps","target","Main","component","from","mountNode","document","querySelector","ReactDOM","render"],"mappings":"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","file":"static/js/main.21716f88.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport './header.scss';\n\nexport const Header = () => (\n  <header className=\"header\">\n    <div className=\"wrapper\">\n      <div className=\"header-container\">\n        <div className=\"brand\">\n          <NavLink to=\"/\">\n            <span role=\"img\" aria-label=\"football\">\n              ⚽️\n            </span>{' '}\n            League App\n          </NavLink>\n        </div>\n        <nav>\n          <ul className=\"unstyled\">\n            <li>\n              <NavLink activeClassName=\"active\" to=\"/table\">\n                table\n              </NavLink>\n            </li>\n            <li>\n              <NavLink activeClassName=\"active\" to=\"/weeks\">\n                weeks\n              </NavLink>\n            </li>\n          </ul>\n        </nav>\n      </div>\n    </div>\n  </header>\n);\n","import superagent from 'superagent';\n\nexport const API_ENDPOINT = 'https://football-server.eliamartani.now.sh/api';\n\nexport const fetch = path => {\n  return new Promise((resolve, reject) => {\n    superagent(`${API_ENDPOINT}${path}`).end((err, res) => {\n      if (!err && res.ok) {\n        return resolve(res.body);\n      }\n\n      return reject(err);\n    });\n  });\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { API_ENDPOINT } from '../../../services/api';\n\nconst ROUTE_TEAM = '/teams/';\n\nexport const TableResultRows = ({ table }) =>\n  table.map((result, index) => {\n    const imageUrl = `${API_ENDPOINT}/logos/${result.teamId}`;\n    const url = `${ROUTE_TEAM}${result.teamId}`;\n    const position = index + 1;\n\n    return (\n      <tr key={result.teamId}>\n        <td>{position}</td>\n        <td>\n          <Link to={url}>\n            <img src={imageUrl} alt={result.teamName} loading=\"lazy\" />\n            <span>{result.teamName}</span>\n          </Link>\n        </td>\n        <td>\n          <strong>{result.points}</strong>\n        </td>\n        <td>{result.won}</td>\n        <td>{result.drawn}</td>\n        <td>{result.lost}</td>\n        <td>{result.goals}</td>\n        <td>{result.goalsConceded}</td>\n        <td>{result.goalsDifference}</td>\n      </tr>\n    );\n  });\n","import React from 'react';\nimport { TableResultRows } from './TableResultRows';\n\nimport './table-result.scss';\n\nexport const TableResult = ({ table }) => {\n  return (\n    <table className=\"table-result\">\n      <thead>\n        <tr>\n          <th title=\"Position\">\n            <span>Position</span>\n          </th>\n          <th title=\"Team\">Team</th>\n          <th title=\"Points\">\n            P<span>oints</span>\n          </th>\n          <th title=\"Won\">\n            W<span>on</span>\n          </th>\n          <th title=\"Drawn\">\n            D<span>rawn</span>\n          </th>\n          <th title=\"Lost\">\n            L<span>ost</span>\n          </th>\n          <th title=\"Goals For\">GF</th>\n          <th title=\"Goals Against\">GA</th>\n          <th title=\"Goals Difference\">GD</th>\n        </tr>\n      </thead>\n      <tbody>\n        <TableResultRows table={table} />\n      </tbody>\n    </table>\n  );\n};\n","export const findByValue = (teams, value) => {\n  const indexTeam = teams.indexOf(value);\n  const indexOpponent = indexTeam === 0 ? 1 : 0;\n\n  return [indexTeam, indexOpponent];\n};\n","export const getMatch = ({ teams, teamIds, score }) => {\n  const [nameTeam, nameOpponent] = teams;\n  const [idTeam, idOpponent] = teamIds;\n  const [scoreTeam, scoreOpponent] = score;\n\n  const team = {\n    team: nameTeam,\n    teamId: idTeam,\n    score: scoreTeam,\n    winner: scoreTeam > scoreOpponent,\n  };\n  const opponent = {\n    team: nameOpponent,\n    teamId: idOpponent,\n    score: scoreOpponent,\n    winner: scoreOpponent > scoreTeam,\n  };\n\n  return [team, opponent];\n};\n","export const getResult = (team, opponent) => {\n  const won = team.score > opponent.score ? 1 : 0;\n  const drawn = team.score === opponent.score ? 1 : 0;\n  const lost = team.score < opponent.score ? 1 : 0;\n  const result = {\n    matches: 1,\n    points: won * 3 || drawn,\n    won: won,\n    drawn: drawn,\n    lost: lost,\n    goals: team.score,\n    goalsConceded: opponent.score,\n    goalsDifference: team.score - opponent.score,\n  };\n\n  return result;\n};\n","import { findByValue } from '../find/';\nimport { getMatch } from '../match';\nimport { getResult } from '../result/';\n\nexport const getTableResult = (teams, weeksMatches) => {\n  const tableResult = {};\n\n  // create an empty array for each team\n  for (const key in teams) {\n    tableResult[teams[key]] = [];\n  }\n\n  for (const key in weeksMatches) {\n    const matches = weeksMatches[key];\n\n    for (const matchIndex in matches) {\n      const result = matches[matchIndex];\n      const match = getMatch(result);\n\n      for (const teamIndex in result.teams) {\n        const teamName = result.teams[teamIndex];\n        const [indexTeam, indexOpponent] = findByValue(result.teams, teamName);\n        const team = match[indexTeam];\n        const opponent = match[indexOpponent];\n\n        tableResult[teamName].push({\n          team,\n          opponent,\n        });\n      }\n    }\n  }\n\n  return tableResult;\n};\n\nexport const getTeamsResult = matchesPerTeam => {\n  const teamsResult = [];\n\n  for (const teamName in matchesPerTeam) {\n    const matches = matchesPerTeam[teamName];\n    const model = {\n      drawn: 0,\n      goals: 0,\n      goalsConceded: 0,\n      goalsDifference: 0,\n      lost: 0,\n      matches: 0,\n      points: 0,\n      teamId: matches[0].team.teamId,\n      teamName,\n      won: 0,\n    };\n\n    for (const matchIndex in matches) {\n      const match = matches[matchIndex];\n      const result = getResult(match.team, match.opponent);\n\n      for (const key in result) {\n        model[key] += result[key];\n      }\n    }\n\n    teamsResult.push(model);\n  }\n\n  return teamsResult;\n};\n\n// TASK #4 - create a table of results\nexport const computeTable = (teams, weeksMatches) => {\n  const matchesPerTeam = getTableResult(teams, weeksMatches);\n  const teamsResult = getTeamsResult(matchesPerTeam);\n  const orderedResult = teamsResult.sort((a, b) => {\n    const byPoints = b.points - a.points;\n    const byGoalsDifference = b.goalsDifference - a.goalsDifference;\n    const byGoalsScored = b.goals - a.goals;\n\n    return byPoints || byGoalsDifference || byGoalsScored;\n  });\n\n  return orderedResult;\n};\n","import React, { useEffect, useState } from 'react';\nimport { TableResult } from '../../components/TableResult';\n\nimport { computeTable } from '../../utils/table/';\nimport { fetch } from '../../services/api';\n\nconst API_TEAMS = '/teams';\nconst API_WEEKS = '/weeks';\n\nexport const Table = () => {\n  const [table, setTable] = useState([]);\n\n  // on load\n  useEffect(() => {\n    const requests = [fetch(API_TEAMS), fetch(API_WEEKS)];\n\n    Promise.all(requests).then(([teams, weeksMatches]) => {\n      const computedTable = computeTable(teams, weeksMatches);\n\n      setTable(computedTable);\n    });\n  }, []);\n\n  if (!table.length) {\n    return <div className=\"wrapper\">Loading...</div>;\n  }\n\n  return (\n    <div className=\"table\">\n      <div className=\"wrapper\">\n        <h1>Ranking</h1>\n        <TableResult table={table} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { API_ENDPOINT } from '../../../services/api';\n\nimport './result-team.scss';\n\nconst ROUTE_TEAM = '/teams/';\n\nexport const ResultTeam = ({ teamId, team, score, winner }) => {\n  const imageUrl = `${API_ENDPOINT}/logos/${teamId}`;\n  const url = `${ROUTE_TEAM}${teamId}`;\n  const winnerClass = winner ? 'winner' : '';\n\n  return (\n    <div key={teamId} className={`result-team ${winnerClass}`}>\n      <div className=\"result-team-image\">\n        <Link to={url}>\n          <img src={imageUrl} alt={team} loading=\"lazy\" />\n        </Link>\n      </div>\n\n      <div className=\"result-team-name\">\n        <Link to={url}>{team}</Link>\n      </div>\n\n      <div className=\"result-team-score\">{score}</div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { ResultTeam } from '../ResultTeam';\n\nimport { getMatch } from '../../../utils/match';\n\nimport './result.scss';\n\n// TASK #1 - create result line\nexport const Result = props => {\n  const resultInfo = getMatch(props);\n  const resultTeam = resultInfo.map(result => {\n    return <ResultTeam key={result.teamId} {...result} />;\n  });\n\n  return <div className=\"result\">{resultTeam}</div>;\n};\n","import React from 'react';\nimport { Result } from './Result';\n\nexport const Results = ({ results }) => {\n  const resultList = results.map((result, index) => {\n    return <Result key={index} {...result} />;\n  });\n\n  if (!resultList.length) {\n    return <p>No results found</p>;\n  }\n\n  return resultList;\n};\n","import React from 'react';\n\nconst titles = {\n  matches: 'Matches',\n  points: 'Points',\n  won: 'Wins',\n  drawn: 'Draws',\n  lost: 'Losses',\n  goals: 'Goals',\n  goalsConceded: 'Goals Conceded',\n};\n\nexport const TableObjectRows = ({ rows }) =>\n  Object.entries(titles).map(([key, value]) => (\n    <tr key={key}>\n      <th>{value}</th>\n      <td>{rows[key]}</td>\n    </tr>\n  ));\n","import React from 'react';\nimport { TableObjectRows } from './TableObjectRows';\n\nimport './table-object.scss';\n\nexport const TableObject = rows => {\n  return (\n    <table className=\"table-object\">\n      <tbody>\n        <TableObjectRows rows={rows} />\n      </tbody>\n    </table>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Results } from '../../components/Results';\nimport { TableObject } from '../../components/TableObject';\nimport { API_ENDPOINT } from '../../services/api';\nimport { computeTeamStats } from '../../utils/stats/';\nimport { fetch } from '../../services/api';\n\nimport './team.scss';\n\nconst API_TEAM = '/teams/';\n\nexport const Team = props => {\n  const [team, setTeam] = useState(null);\n  const [stats, setStats] = useState(null);\n  const [collapsed, setCollapse] = useState(false);\n\n  // handle toggle click\n  const handleToggle = event => {\n    setCollapse(!collapsed);\n\n    event.preventDefault();\n  };\n\n  // on parameter change\n  useEffect(() => {\n    const index = props.match.params.index;\n\n    fetch(`${API_TEAM}${index}`).then(response => {\n      setTeam(response);\n      setCollapse(false);\n    });\n  }, [props.match.params.index]);\n\n  // on team change\n  useEffect(() => {\n    if (!team) {\n      return;\n    }\n\n    const newStats = computeTeamStats(team);\n\n    setStats(newStats);\n  }, [team]);\n\n  if (!team) {\n    return <div className=\"wrapper\">Loading...</div>;\n  }\n\n  const imageUrl = `${API_ENDPOINT}/logos/${team.id}`;\n\n  return (\n    <div className=\"team\">\n      <div className=\"wrapper\">\n        <div className=\"container\">\n          <aside>\n            <img src={imageUrl} alt={team.name} loading=\"lazy\" />\n            <h1>{team.name}</h1>\n            <button className=\"toggle-info\" onClick={handleToggle}>\n              {`${collapsed ? 'Close' : 'Open'} team stats`}\n            </button>\n            <div className={`team-info ${collapsed ? 'collapsed' : ''}`}>\n              <TableObject {...stats} />\n            </div>\n          </aside>\n          <main>\n            <h2>Results</h2>\n            <Results results={team.results} />\n          </main>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { findByValue } from '../find/';\nimport { getMatch } from '../match';\nimport { getResult } from '../result';\n\n// TASK #3 - compute team stats\nexport const computeTeamStats = ({ id, results }) => {\n  const idParsed = parseInt(id, 10);\n  const model = {\n    matches: 0,\n    points: 0,\n    won: 0,\n    drawn: 0,\n    lost: 0,\n    goals: 0,\n    goalsConceded: 0,\n    goalsDifference: 0,\n  };\n\n  results.forEach(result => {\n    const [indexTeam, indexOpponent] = findByValue(result.teamIds, idParsed);\n    const match = getMatch(result);\n    const team = match[indexTeam];\n    const opponent = match[indexOpponent];\n    const matchResult = getResult(team, opponent);\n\n    for (const key in matchResult) {\n      model[key] += matchResult[key];\n    }\n  });\n\n  return model;\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst ROUTE_WEEKS = '/weeks/';\n\nexport const WeekLinksList = ({ weeks }) => {\n  const list = weeks.map(weekNumber => (\n    <li key={weekNumber}>\n      <NavLink activeClassName=\"active\" to={`${ROUTE_WEEKS}${weekNumber}`}>\n        {weekNumber}\n      </NavLink>\n    </li>\n  ));\n\n  return <ul className=\"unstyled\">{list}</ul>;\n};\n","import React from 'react';\n\nexport const WeekLinksSelect = ({ chosenWeek, handleChange, weeks }) => {\n  const options = weeks.map(weekNumber => (\n    <option key={weekNumber} value={weekNumber}>\n      {weekNumber}\n    </option>\n  ));\n\n  return (\n    <select defaultValue={chosenWeek} onChange={handleChange}>\n      {options}\n    </select>\n  );\n};\n","import React from 'react';\nimport { WeekLinksList } from './WeekLinksList';\nimport { WeekLinksSelect } from './WeekLinksSelect';\n\nimport './week-links.scss';\n\nexport const WeekLinks = ({ chosenWeek, results, handleChange }) => {\n  const weeks = results.map((week, index) => index + 1);\n  const selecOptions = {\n    chosenWeek,\n    handleChange,\n    weeks,\n  };\n\n  return (\n    <div className=\"week-links\">\n      <WeekLinksList weeks={weeks} />\n      <WeekLinksSelect {...selecOptions} />\n    </div>\n  );\n};\n","// TASK #2 - make matches start at 1 instead of 0\nexport const setIndex = index => {\n  const newIndex = parseInt(index - 1, 10);\n\n  return isNaN(newIndex) ? 0 : newIndex;\n};\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Results } from '../../components/Results';\nimport { WeekLinks } from '../../components/WeekLinks';\n\nimport { setIndex } from '../../utils/parameter';\nimport { fetch } from '../../services/api';\n\nconst API_WEEKS = '/weeks';\n\nconst ROUTE_WEEKS = '/weeks/';\n\nexport const Weeks = props => {\n  const history = useHistory();\n  const index = setIndex(props.match.params.index);\n  const [results, setResults] = useState([]);\n  const [chosenWeek, setChosenWeek] = useState(index);\n\n  // on load\n  useEffect(() => {\n    fetch(API_WEEKS).then(response => {\n      setResults(response);\n    });\n  }, []);\n\n  // on parameter change\n  useEffect(() => {\n    const index = setIndex(props.match.params.index);\n\n    setChosenWeek(index);\n  }, [props.match.params.index]);\n\n  // handle select change\n  const handleChange = event => {\n    history.push(`${ROUTE_WEEKS}${event.target.value}`);\n  };\n\n  // props\n  const linksProps = {\n    chosenWeek: chosenWeek + 1,\n    results,\n    handleChange,\n  };\n\n  if (!results.length) {\n    return <div className=\"wrapper\">Loading...</div>;\n  }\n\n  return (\n    <div className=\"weeks\">\n      <div className=\"wrapper\">\n        <div className=\"container\">\n          <aside>\n            <h2>Weeks</h2>\n            <WeekLinks {...linksProps} />\n          </aside>\n          <main>\n            <h1>Results for week #{chosenWeek + 1}</h1>\n            <Results results={results[chosenWeek]} />\n          </main>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Header } from '../../components/Header';\nimport { Table } from '../Table';\nimport { Team } from '../Team';\nimport { Weeks } from '../Weeks';\nimport { HashRouter, Route, Switch, Redirect } from 'react-router-dom';\n\nexport const Main = () => (\n  <HashRouter>\n    <Header />\n\n    <Switch>\n      <Route path=\"/weeks/:index\" component={Weeks} />\n      <Route path=\"/teams/:index\" component={Team} />\n      <Route path=\"/table\" component={Table} />\n\n      <Redirect from=\"/\" to=\"/weeks/1\" />\n    </Switch>\n  </HashRouter>\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Main } from './containers/Main/';\n\nimport './index.scss';\n\nconst mountNode = document.querySelector('#root');\n\nReactDOM.render(<Main />, mountNode);\n"],"sourceRoot":""}
{"version":3,"sources":["components/Header/index.js","components/TableResult/TableResultRows/index.js","components/TableResult/index.js","utils/find/index.js","utils/match/index.js","utils/result/index.js","utils/table/index.js","services/api.js","containers/Table/index.js","components/Results/ResultTeam/index.js","components/Results/Result/index.js","components/Results/index.js","components/TableObject/TableObjectRows/index.js","components/TableObject/index.js","containers/Team/index.js","utils/stats/index.js","components/WeekLinks/WeekLinksList/index.js","components/WeekLinks/WeekLinksSelect/index.js","components/WeekLinks/index.js","utils/parameter/index.js","containers/Weeks/index.js","index.js","containers/Main/index.js"],"names":["Header","className","to","role","aria-label","activeClassName","TableResultRows","table","map","result","index","image","teamId","url","position","key","src","alt","teamName","points","won","drawn","lost","goals","goalsConceded","goalsDifference","TableResult","title","findByValue","teams","value","indexTeam","indexOf","getMatch","teamIds","score","nameTeam","nameOpponent","idTeam","idOpponent","scoreTeam","scoreOpponent","team","winner","getResult","opponent","matches","computeTable","weeksMatches","matchesPerTeam","teamsResult","model","matchIndex","match","push","getTeamsResult","tableResult","teamIndex","indexOpponent","getTableResult","sort","a","b","byPoints","byGoalsDifference","byGoalsScored","fetch","path","Promise","resolve","reject","superagent","end","err","res","ok","body","Table","useState","setTable","useEffect","requests","all","then","computedTable","length","ResultTeam","winnerClass","Result","props","resultTeam","Results","resultList","results","titles","TableObjectRows","rows","Object","entries","TableObject","Team","setTeam","stats","setStats","collapsed","setCollapse","params","response","newStats","id","idParsed","parseInt","forEach","matchResult","computeTeamStats","logo","name","onClick","event","preventDefault","WeekLinksList","list","weeks","weekNumber","WeekLinksSelect","chosenWeek","handleChange","options","defaultValue","onChange","WeekLinks","week","selecOptions","setIndex","newIndex","isNaN","Weeks","history","useHistory","setResults","setChosenWeek","linksProps","target","mountNode","document","querySelector","ReactDOM","render","component","from"],"mappings":"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","file":"static/js/main.060208b7.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nimport './header.scss'\r\n\r\nexport const Header = () => (\r\n  <header className='header'>\r\n    <div className='wrapper'>\r\n      <div className='header-container'>\r\n        <div className='brand'>\r\n          <NavLink to='/'>\r\n            <span role='img' aria-label='football'>⚽️</span> League App\r\n          </NavLink>\r\n        </div>\r\n        <nav>\r\n          <ul className='unstyled'>\r\n            <li>\r\n              <NavLink activeClassName='active' to='/table'>table</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink activeClassName='active' to='/weeks'>weeks</NavLink>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </div>\r\n  </header>\r\n)\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst API_IMAGE = 'http://acor.sl.pt:7777/logos/'\r\n\r\nconst ROUTE_TEAM = '/teams/'\r\n\r\nexport const TableResultRows = ({ table }) => table.map((result, index) => {\r\n  const image = `${ API_IMAGE }${ result.teamId }`\r\n  const url = `${ ROUTE_TEAM }${ result.teamId }`\r\n  const position = index + 1\r\n\r\n  return <tr key={ result.teamId }>\r\n    <td>{ position }</td>\r\n    <td>\r\n      <Link to={ url }>\r\n        <img src={ image } alt={ result.teamName } />\r\n        <span>\r\n          { result.teamName }\r\n        </span>\r\n      </Link>\r\n    </td>\r\n    <td>\r\n      <strong>{ result.points }</strong>\r\n    </td>\r\n    <td>{ result.won }</td>\r\n    <td>{ result.drawn }</td>\r\n    <td>{ result.lost }</td>\r\n    <td>{ result.goals }</td>\r\n    <td>{ result.goalsConceded }</td>\r\n    <td>{ result.goalsDifference }</td>\r\n  </tr>\r\n})\r\n","import React from 'react'\r\nimport { TableResultRows } from './TableResultRows'\r\n\r\nimport './table-result.scss'\r\n\r\nexport const TableResult = ({ table }) => {\r\n  return <table className='table-result'>\r\n    <thead>\r\n      <tr>\r\n        <th title='Position'>\r\n          <span>Position</span>\r\n        </th>\r\n        <th title='Team'>\r\n          Team\r\n        </th>\r\n        <th title='Points'>\r\n          P<span>oints</span>\r\n        </th>\r\n        <th title='Won'>\r\n          W<span>on</span>\r\n        </th>\r\n        <th title='Drawn'>\r\n          D<span>rawn</span>\r\n        </th>\r\n        <th title='Lost'>\r\n          L<span>ost</span>\r\n        </th>\r\n        <th title='Goals For'>GF</th>\r\n        <th title='Goals Against'>GA</th>\r\n        <th title='Goals Difference'>GD</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <TableResultRows table={ table } />\r\n    </tbody>\r\n  </table>\r\n}\r\n","export const findByValue = (teams, value) => {\r\n  const indexTeam =  teams.indexOf(value)\r\n  const indexOpponent = indexTeam === 0 ? 1 : 0\r\n\r\n  return [\r\n    indexTeam,\r\n    indexOpponent\r\n  ]\r\n}\r\n","export const getMatch = ({ teams, teamIds, score }) => {\r\n  const [ nameTeam, nameOpponent ] = teams\r\n  const [ idTeam, idOpponent ] = teamIds\r\n  const [ scoreTeam, scoreOpponent ] = score\r\n\r\n  const team = {\r\n    team: nameTeam,\r\n    teamId: idTeam,\r\n    score: scoreTeam,\r\n    winner: scoreTeam > scoreOpponent\r\n  }\r\n  const opponent = {\r\n    team: nameOpponent,\r\n    teamId: idOpponent,\r\n    score: scoreOpponent,\r\n    winner: scoreOpponent > scoreTeam\r\n  }\r\n\r\n  return [ team, opponent ]\r\n}\r\n","export const getResult = (team, opponent) => {\r\n  const won = (team.score > opponent.score) ? 1 : 0\r\n  const drawn = (team.score === opponent.score) ? 1 : 0\r\n  const lost = (team.score < opponent.score) ? 1 : 0\r\n  const result = {\r\n    matches: 1,\r\n    points: won * 3 || drawn,\r\n    won: won,\r\n    drawn: drawn,\r\n    lost: lost,\r\n    goals: team.score,\r\n    goalsConceded: opponent.score,\r\n    goalsDifference: team.score - opponent.score,\r\n  }\r\n\r\n  return result\r\n}\r\n","import { findByValue } from '../find/'\r\nimport { getMatch } from '../match'\r\nimport { getResult } from '../result/'\r\n\r\nexport const getTableResult = (teams, weeksMatches) => {\r\n  const tableResult = {}\r\n\r\n  // create an empty array for each team\r\n  for (const key in teams) {\r\n    tableResult[teams[key]] = []\r\n  }\r\n\r\n  for (const key in weeksMatches) {\r\n    const matches = weeksMatches[key]\r\n\r\n    for (const matchIndex in matches) {\r\n      const result = matches[matchIndex]\r\n      const match = getMatch(result)\r\n\r\n      for (const teamIndex in result.teams) {\r\n        const teamName = result.teams[teamIndex]\r\n        const [\r\n          indexTeam,\r\n          indexOpponent\r\n        ] = findByValue(result.teams, teamName)\r\n        const team = match[indexTeam]\r\n        const opponent = match[indexOpponent]\r\n\r\n        tableResult[teamName].push({\r\n          team,\r\n          opponent\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  return tableResult\r\n}\r\n\r\nexport const getTeamsResult = matchesPerTeam => {\r\n  const teamsResult = []\r\n\r\n  for (const teamName in matchesPerTeam) {\r\n    const matches = matchesPerTeam[teamName]\r\n    const model = {\r\n      drawn: 0,\r\n      goals: 0,\r\n      goalsConceded: 0,\r\n      goalsDifference: 0,\r\n      lost: 0,\r\n      matches: 0,\r\n      points: 0,\r\n      teamId: matches[0].team.teamId,\r\n      teamName,\r\n      won: 0\r\n    }\r\n\r\n    for (const matchIndex in matches) {\r\n      const match = matches[matchIndex]\r\n      const result = getResult(match.team, match.opponent)\r\n\r\n      for (const key in result) {\r\n        model[key] += result[key]\r\n      }\r\n    }\r\n\r\n    teamsResult.push(model)\r\n  }\r\n\r\n  return teamsResult\r\n}\r\n\r\n// TASK #4 - create a table of results\r\nexport const computeTable = (teams, weeksMatches) => {\r\n  const matchesPerTeam = getTableResult(teams, weeksMatches)\r\n  const teamsResult = getTeamsResult(matchesPerTeam)\r\n  const orderedResult = teamsResult.sort((a, b) => {\r\n    const byPoints = b.points - a.points\r\n    const byGoalsDifference = b.goalsDifference - a.goalsDifference\r\n    const byGoalsScored = b.goals - a.goals\r\n\r\n    return byPoints || byGoalsDifference || byGoalsScored\r\n  })\r\n\r\n  return orderedResult\r\n}\r\n","import superagent from 'superagent'\r\n\r\nconst API_ENDPOINT = 'http://acor.sl.pt:7777'\r\n\r\nexport const fetch = (path) => {\r\n  return new Promise((resolve, reject) => {\r\n    superagent(`${API_ENDPOINT}${path}`).end((err, res) => {\r\n      if (!err && res.ok) {\r\n        return resolve(res.body)\r\n      }\r\n\r\n      return reject(err)\r\n    })\r\n  })\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { TableResult } from '../../components/TableResult'\r\n\r\nimport { computeTable } from '../../utils/table/'\r\nimport { fetch } from '../../services/api'\r\n\r\nconst API_TEAMS = '/teams'\r\nconst API_WEEKS = '/weeks'\r\n\r\nexport const Table = () => {\r\n  const [ table, setTable ] = useState([])\r\n\r\n  // on load\r\n  useEffect(() => {\r\n    const requests = [ fetch(API_TEAMS), fetch(API_WEEKS) ]\r\n\r\n    Promise.all(requests).then(([ teams, weeksMatches ]) => {\r\n      const computedTable = computeTable(teams, weeksMatches)\r\n\r\n      setTable(computedTable)\r\n    })\r\n  }, [])\r\n\r\n  if (!table.length) {\r\n    return <div className='wrapper'>Loading...</div>\r\n  }\r\n\r\n  return <div className='table'>\r\n    <div className='wrapper'>\r\n      <h1>Ranking</h1>\r\n      <TableResult table={ table } />\r\n    </div>\r\n  </div>\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport './result-team.scss'\r\n\r\nconst API_IMAGE = 'http://acor.sl.pt:7777/logos/'\r\n\r\nconst ROUTE_TEAM = '/teams/'\r\n\r\nexport const ResultTeam = ({ teamId, team, score, winner }) => {\r\n  const image = `${ API_IMAGE }${ teamId }`\r\n  const url = `${ ROUTE_TEAM }${ teamId }`\r\n  const winnerClass = winner ? 'winner' : ''\r\n\r\n  return <div key={ teamId } className={ `result-team ${ winnerClass }` }>\r\n    <div className='result-team-image'>\r\n      <Link to={ url }>\r\n        <img src={ image } alt={ team } />\r\n      </Link>\r\n    </div>\r\n\r\n    <div className='result-team-name'>\r\n      <Link to={ url }>\r\n        { team }\r\n      </Link>\r\n    </div>\r\n\r\n    <div className='result-team-score'>\r\n      { score }\r\n    </div>\r\n  </div>\r\n}\r\n","import React from 'react'\r\nimport { ResultTeam } from '../ResultTeam'\r\n\r\nimport { getMatch } from '../../../utils/match'\r\n\r\nimport './result.scss'\r\n\r\n// TASK #1 - create result line\r\nexport const Result = props => {\r\n  const resultInfo = getMatch(props)\r\n  const resultTeam = resultInfo.map(result => {\r\n    return <ResultTeam key={ result.teamId } {...result} />\r\n  })\r\n\r\n  return <div className='result'>{ resultTeam }</div>\r\n}\r\n","import React from 'react'\r\nimport { Result } from './Result'\r\n\r\nexport const Results = ({ results }) => {\r\n  const resultList = results.map((result, index) => {\r\n    return <Result key={index} {...result} />\r\n  })\r\n\r\n  if (!resultList.length) {\r\n    return <p>\r\n      No results found\r\n    </p>\r\n  }\r\n\r\n  return resultList\r\n}\r\n","import React from 'react'\r\n\r\nconst titles = {\r\n  matches: 'Matches',\r\n  points : 'Points',\r\n  won : 'Wins',\r\n  drawn : 'Draws',\r\n  lost : 'Losses',\r\n  goals : 'Goals',\r\n  goalsConceded : 'Goals Conceded'\r\n}\r\n\r\nexport const TableObjectRows = ({ rows }) => Object.entries(titles).map(([ key, value ]) => (\r\n  <tr key={ key }>\r\n    <th>{ value }</th>\r\n    <td>{ rows[key] }</td>\r\n  </tr>\r\n))\r\n","import React from 'react'\r\nimport { TableObjectRows } from './TableObjectRows'\r\n\r\nimport './table-object.scss'\r\n\r\nexport const TableObject = rows => {\r\n  return (\r\n    <table className='table-object'>\r\n      <tbody>\r\n        <TableObjectRows rows={ rows } />\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Results } from '../../components/Results'\r\nimport { TableObject } from '../../components/TableObject'\r\n\r\nimport { computeTeamStats } from '../../utils/stats/'\r\nimport { fetch } from '../../services/api'\r\n\r\nimport './team.scss'\r\n\r\nconst API_TEAM = '/teams/'\r\n\r\nexport const Team = props => {\r\n  const [ team, setTeam ] = useState(null)\r\n  const [ stats, setStats ] = useState(null)\r\n  const [ collapsed, setCollapse ] = useState(false)\r\n\r\n  // handle toggle click\r\n  const handleToggle = event => {\r\n    setCollapse(!collapsed)\r\n\r\n    event.preventDefault()\r\n  }\r\n\r\n  // on parameter change\r\n  useEffect(() => {\r\n    const index = props.match.params.index\r\n\r\n    fetch(`${ API_TEAM }${ index }`).then(response => {\r\n      setTeam(response)\r\n      setCollapse(false)\r\n    })\r\n  }, [ props.match.params.index ])\r\n\r\n  // on team change\r\n  useEffect(() => {\r\n    if (!team) {\r\n      return\r\n    }\r\n\r\n    const newStats = computeTeamStats(team)\r\n\r\n    setStats(newStats)\r\n  }, [ team ])\r\n\r\n  if (!team) {\r\n    return <div className='wrapper'>Loading...</div>\r\n  }\r\n\r\n  return (\r\n    <div className='team'>\r\n      <div className='wrapper'>\r\n        <div className='container'>\r\n          <aside>\r\n            <img src={ team.logo } alt={ team.name } />\r\n            <h1>{ team.name }</h1>\r\n            <button className='toggle-info' onClick={ handleToggle }>\r\n              { `${ collapsed ? 'Close': 'Open' } team stats` }\r\n            </button>\r\n            <div className={ `team-info ${ collapsed ? 'collapsed' : '' }` }>\r\n              <TableObject { ...stats } />\r\n            </div>\r\n          </aside>\r\n          <main>\r\n            <h2>Results</h2>\r\n            <Results results={ team.results } />\r\n          </main>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { findByValue } from '../find/'\r\nimport { getMatch } from '../match'\r\nimport { getResult } from '../result'\r\n\r\n// TASK #3 - compute team stats\r\nexport const computeTeamStats = ({id, results}) => {\r\n  const idParsed = parseInt(id, 10)\r\n  const model = {\r\n    matches: 0,\r\n    points: 0,\r\n    won: 0,\r\n    drawn: 0,\r\n    lost: 0,\r\n    goals: 0,\r\n    goalsConceded: 0,\r\n    goalsDifference: 0\r\n  }\r\n\r\n  results.forEach(result => {\r\n    const [\r\n      indexTeam,\r\n      indexOpponent\r\n    ] = findByValue(result.teamIds, idParsed)\r\n    const match = getMatch(result)\r\n    const team = match[indexTeam]\r\n    const opponent = match[indexOpponent]\r\n    const matchResult = getResult(team, opponent)\r\n\r\n    for (const key in matchResult) {\r\n      model[key] += matchResult[key]\r\n    }\r\n  })\r\n\r\n  return model\r\n}\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst ROUTE_WEEKS = '/weeks/'\r\n\r\nexport const WeekLinksList = ({ weeks }) => {\r\n  const list = weeks.map(weekNumber =>\r\n    <li key={ weekNumber }>\r\n      <NavLink activeClassName='active' to={`${ ROUTE_WEEKS }${ weekNumber }`}>\r\n        { weekNumber }\r\n      </NavLink>\r\n    </li>\r\n  )\r\n\r\n  return <ul className='unstyled'>\r\n    { list }\r\n  </ul>\r\n}\r\n","import React from 'react'\r\n\r\nexport const WeekLinksSelect = ({ chosenWeek, handleChange, weeks }) => {\r\n  const options = weeks.map(weekNumber =>\r\n    <option key={ weekNumber } value={ weekNumber }>{ weekNumber }</option>\r\n  )\r\n\r\n  return <select defaultValue={ chosenWeek } onChange={ handleChange }>\r\n    { options }\r\n  </select>\r\n}\r\n","import React from 'react'\r\nimport { WeekLinksList } from './WeekLinksList'\r\nimport { WeekLinksSelect } from './WeekLinksSelect'\r\n\r\nimport './week-links.scss'\r\n\r\nexport const WeekLinks = ({ chosenWeek, results, handleChange }) => {\r\n  const weeks = results.map((week, index) => index + 1)\r\n  const selecOptions = {\r\n    chosenWeek,\r\n    handleChange,\r\n    weeks\r\n  }\r\n\r\n  return <div className='week-links'>\r\n    <WeekLinksList weeks={ weeks } />\r\n    <WeekLinksSelect { ...selecOptions } />\r\n  </div>\r\n}\r\n","\r\n// TASK #2 - make matches start at 1 instead of 0\r\nexport const setIndex = index => {\r\n  const newIndex = parseInt(index - 1, 10)\r\n\r\n  return isNaN(newIndex)\r\n    ? 0\r\n    : newIndex\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Results } from '../../components/Results'\r\nimport { WeekLinks } from '../../components/WeekLinks'\r\n\r\nimport { setIndex } from '../../utils/parameter'\r\nimport { fetch } from '../../services/api'\r\n\r\nconst API_WEEKS = '/weeks'\r\n\r\nconst ROUTE_WEEKS = '/weeks/'\r\n\r\nexport const Weeks = props => {\r\n  const history = useHistory()\r\n  const index = setIndex(props.match.params.index)\r\n  const [ results, setResults ] = useState([])\r\n  const [ chosenWeek, setChosenWeek ] = useState(index)\r\n\r\n  // on load\r\n  useEffect(() => {\r\n    fetch(API_WEEKS).then(response => {\r\n      setResults(response)\r\n    })\r\n  }, [])\r\n\r\n  // on parameter change\r\n  useEffect(() => {\r\n    const index = setIndex(props.match.params.index)\r\n\r\n    setChosenWeek(index)\r\n  }, [ props.match.params.index ])\r\n\r\n  // handle select change\r\n  const handleChange = event => {\r\n    history.push(`${ROUTE_WEEKS}${event.target.value}`)\r\n  }\r\n\r\n  // props\r\n  const linksProps = {\r\n    chosenWeek: chosenWeek + 1,\r\n    results,\r\n    handleChange\r\n  }\r\n\r\n  if (!results.length) {\r\n    return <div className='wrapper'>Loading...</div>\r\n  }\r\n\r\n  return (\r\n    <div className='weeks'>\r\n      <div className='wrapper'>\r\n        <div className='container'>\r\n          <aside>\r\n            <h2>Weeks</h2>\r\n            <WeekLinks { ...linksProps } />\r\n          </aside>\r\n          <main>\r\n            <h1>Results for week #{ chosenWeek + 1 }</h1>\r\n            <Results results={ results[ chosenWeek ] } />\r\n          </main>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Main } from './containers/Main/'\r\n\r\nimport './index.scss'\r\n\r\nconst mountNode = document.querySelector('#root')\r\n\r\nReactDOM.render(<Main />, mountNode)\r\n","import React from 'react'\r\nimport { Header } from '../../components/Header'\r\nimport { Table } from '../Table'\r\nimport { Team } from '../Team'\r\nimport { Weeks } from '../Weeks'\r\nimport { HashRouter, Route, Switch, Redirect } from 'react-router-dom'\r\n\r\nexport const Main = () => (\r\n  <HashRouter>\r\n    <Header />\r\n\r\n    <Switch>\r\n      <Route path='/weeks/:index' component={ Weeks } />\r\n      <Route path='/teams/:index' component={ Team } />\r\n      <Route path='/table' component={ Table } />\r\n\r\n      <Redirect from='/' to='/weeks/1' />\r\n    </Switch>\r\n  </HashRouter>\r\n)\r\n"],"sourceRoot":""}